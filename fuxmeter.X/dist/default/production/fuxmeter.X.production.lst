

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 26 22:42:52 2024

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.05
    34                           ; Generated 20/12/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC12F1822 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  0111                     	;# 
   109  0112                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0117                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011D                     	;# 
   118  011D                     	;# 
   119  018C                     	;# 
   120  0191                     	;# 
   121  0191                     	;# 
   122  0192                     	;# 
   123  0193                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019B                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019C                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  019F                     	;# 
   140  020C                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0391                     	;# 
   165  0392                     	;# 
   166  0393                     	;# 
   167  039A                     	;# 
   168  039C                     	;# 
   169  039D                     	;# 
   170  039E                     	;# 
   171  039F                     	;# 
   172  0FE4                     	;# 
   173  0FE5                     	;# 
   174  0FE6                     	;# 
   175  0FE7                     	;# 
   176  0FE8                     	;# 
   177  0FE9                     	;# 
   178  0FEA                     	;# 
   179  0FEB                     	;# 
   180  0FED                     	;# 
   181  0FEE                     	;# 
   182  0FEF                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  008C                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  0111                     	;# 
   225  0112                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  011A                     	;# 
   232  011B                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  018C                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0199                     	;# 
   246  019A                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019C                     	;# 
   252  019C                     	;# 
   253  019D                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  020C                     	;# 
   257  0211                     	;# 
   258  0211                     	;# 
   259  0212                     	;# 
   260  0212                     	;# 
   261  0213                     	;# 
   262  0213                     	;# 
   263  0214                     	;# 
   264  0214                     	;# 
   265  0215                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0216                     	;# 
   269  0216                     	;# 
   270  0217                     	;# 
   271  0217                     	;# 
   272  0291                     	;# 
   273  0291                     	;# 
   274  0292                     	;# 
   275  0293                     	;# 
   276  0294                     	;# 
   277  0295                     	;# 
   278  0295                     	;# 
   279  0296                     	;# 
   280  0391                     	;# 
   281  0392                     	;# 
   282  0393                     	;# 
   283  039A                     	;# 
   284  039C                     	;# 
   285  039D                     	;# 
   286  039E                     	;# 
   287  039F                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  008C                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  010C                     	;# 
   340  0111                     	;# 
   341  0112                     	;# 
   342  0115                     	;# 
   343  0116                     	;# 
   344  0117                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011A                     	;# 
   348  011B                     	;# 
   349  011D                     	;# 
   350  011D                     	;# 
   351  018C                     	;# 
   352  0191                     	;# 
   353  0191                     	;# 
   354  0192                     	;# 
   355  0193                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0194                     	;# 
   359  0195                     	;# 
   360  0196                     	;# 
   361  0199                     	;# 
   362  019A                     	;# 
   363  019B                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019C                     	;# 
   368  019C                     	;# 
   369  019D                     	;# 
   370  019E                     	;# 
   371  019F                     	;# 
   372  020C                     	;# 
   373  0211                     	;# 
   374  0211                     	;# 
   375  0212                     	;# 
   376  0212                     	;# 
   377  0213                     	;# 
   378  0213                     	;# 
   379  0214                     	;# 
   380  0214                     	;# 
   381  0215                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0216                     	;# 
   385  0216                     	;# 
   386  0217                     	;# 
   387  0217                     	;# 
   388  0291                     	;# 
   389  0291                     	;# 
   390  0292                     	;# 
   391  0293                     	;# 
   392  0294                     	;# 
   393  0295                     	;# 
   394  0295                     	;# 
   395  0296                     	;# 
   396  0391                     	;# 
   397  0392                     	;# 
   398  0393                     	;# 
   399  039A                     	;# 
   400  039C                     	;# 
   401  039D                     	;# 
   402  039E                     	;# 
   403  039F                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0016                     	;# 
   433  0017                     	;# 
   434  0018                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  008C                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0095                     	;# 
   445  0096                     	;# 
   446  0097                     	;# 
   447  0098                     	;# 
   448  0099                     	;# 
   449  009A                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  010C                     	;# 
   456  0111                     	;# 
   457  0112                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0216                     	;# 
   501  0216                     	;# 
   502  0217                     	;# 
   503  0217                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0391                     	;# 
   513  0392                     	;# 
   514  0393                     	;# 
   515  039A                     	;# 
   516  039C                     	;# 
   517  039D                     	;# 
   518  039E                     	;# 
   519  039F                     	;# 
   520  0FE4                     	;# 
   521  0FE5                     	;# 
   522  0FE6                     	;# 
   523  0FE7                     	;# 
   524  0FE8                     	;# 
   525  0FE9                     	;# 
   526  0FEA                     	;# 
   527  0FEB                     	;# 
   528  0FED                     	;# 
   529  0FEE                     	;# 
   530  0FEF                     	;# 
   531  0000                     	;# 
   532  0001                     	;# 
   533  0002                     	;# 
   534  0003                     	;# 
   535  0004                     	;# 
   536  0005                     	;# 
   537  0006                     	;# 
   538  0007                     	;# 
   539  0008                     	;# 
   540  0009                     	;# 
   541  000A                     	;# 
   542  000B                     	;# 
   543  000C                     	;# 
   544  0011                     	;# 
   545  0012                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0016                     	;# 
   549  0017                     	;# 
   550  0018                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001E                     	;# 
   556  001F                     	;# 
   557  008C                     	;# 
   558  0091                     	;# 
   559  0092                     	;# 
   560  0095                     	;# 
   561  0096                     	;# 
   562  0097                     	;# 
   563  0098                     	;# 
   564  0099                     	;# 
   565  009A                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  010C                     	;# 
   572  0111                     	;# 
   573  0112                     	;# 
   574  0115                     	;# 
   575  0116                     	;# 
   576  0117                     	;# 
   577  0118                     	;# 
   578  0119                     	;# 
   579  011A                     	;# 
   580  011B                     	;# 
   581  011D                     	;# 
   582  011D                     	;# 
   583  018C                     	;# 
   584  0191                     	;# 
   585  0191                     	;# 
   586  0192                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0194                     	;# 
   591  0195                     	;# 
   592  0196                     	;# 
   593  0199                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019D                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  020C                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0216                     	;# 
   617  0216                     	;# 
   618  0217                     	;# 
   619  0217                     	;# 
   620  0291                     	;# 
   621  0291                     	;# 
   622  0292                     	;# 
   623  0293                     	;# 
   624  0294                     	;# 
   625  0295                     	;# 
   626  0295                     	;# 
   627  0296                     	;# 
   628  0391                     	;# 
   629  0392                     	;# 
   630  0393                     	;# 
   631  039A                     	;# 
   632  039C                     	;# 
   633  039D                     	;# 
   634  039E                     	;# 
   635  039F                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  0011                     	;# 
   661  0012                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  008C                     	;# 
   674  0091                     	;# 
   675  0092                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009B                     	;# 
   684  009C                     	;# 
   685  009D                     	;# 
   686  009E                     	;# 
   687  010C                     	;# 
   688  0111                     	;# 
   689  0112                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0117                     	;# 
   693  0118                     	;# 
   694  0119                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011D                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  0191                     	;# 
   701  0191                     	;# 
   702  0192                     	;# 
   703  0193                     	;# 
   704  0193                     	;# 
   705  0193                     	;# 
   706  0194                     	;# 
   707  0195                     	;# 
   708  0196                     	;# 
   709  0199                     	;# 
   710  019A                     	;# 
   711  019B                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019C                     	;# 
   717  019D                     	;# 
   718  019E                     	;# 
   719  019F                     	;# 
   720  020C                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0291                     	;# 
   737  0291                     	;# 
   738  0292                     	;# 
   739  0293                     	;# 
   740  0294                     	;# 
   741  0295                     	;# 
   742  0295                     	;# 
   743  0296                     	;# 
   744  0391                     	;# 
   745  0392                     	;# 
   746  0393                     	;# 
   747  039A                     	;# 
   748  039C                     	;# 
   749  039D                     	;# 
   750  039E                     	;# 
   751  039F                     	;# 
   752  0FE4                     	;# 
   753  0FE5                     	;# 
   754  0FE6                     	;# 
   755  0FE7                     	;# 
   756  0FE8                     	;# 
   757  0FE9                     	;# 
   758  0FEA                     	;# 
   759  0FEB                     	;# 
   760  0FED                     	;# 
   761  0FEE                     	;# 
   762  0FEF                     	;# 
   763  0000                     	;# 
   764  0001                     	;# 
   765  0002                     	;# 
   766  0003                     	;# 
   767  0004                     	;# 
   768  0005                     	;# 
   769  0006                     	;# 
   770  0007                     	;# 
   771  0008                     	;# 
   772  0009                     	;# 
   773  000A                     	;# 
   774  000B                     	;# 
   775  000C                     	;# 
   776  0011                     	;# 
   777  0012                     	;# 
   778  0015                     	;# 
   779  0016                     	;# 
   780  0016                     	;# 
   781  0017                     	;# 
   782  0018                     	;# 
   783  0019                     	;# 
   784  001A                     	;# 
   785  001B                     	;# 
   786  001C                     	;# 
   787  001E                     	;# 
   788  001F                     	;# 
   789  008C                     	;# 
   790  0091                     	;# 
   791  0092                     	;# 
   792  0095                     	;# 
   793  0096                     	;# 
   794  0097                     	;# 
   795  0098                     	;# 
   796  0099                     	;# 
   797  009A                     	;# 
   798  009B                     	;# 
   799  009B                     	;# 
   800  009C                     	;# 
   801  009D                     	;# 
   802  009E                     	;# 
   803  010C                     	;# 
   804  0111                     	;# 
   805  0112                     	;# 
   806  0115                     	;# 
   807  0116                     	;# 
   808  0117                     	;# 
   809  0118                     	;# 
   810  0119                     	;# 
   811  011A                     	;# 
   812  011B                     	;# 
   813  011D                     	;# 
   814  011D                     	;# 
   815  018C                     	;# 
   816  0191                     	;# 
   817  0191                     	;# 
   818  0192                     	;# 
   819  0193                     	;# 
   820  0193                     	;# 
   821  0193                     	;# 
   822  0194                     	;# 
   823  0195                     	;# 
   824  0196                     	;# 
   825  0199                     	;# 
   826  019A                     	;# 
   827  019B                     	;# 
   828  019B                     	;# 
   829  019B                     	;# 
   830  019B                     	;# 
   831  019C                     	;# 
   832  019C                     	;# 
   833  019D                     	;# 
   834  019E                     	;# 
   835  019F                     	;# 
   836  020C                     	;# 
   837  0211                     	;# 
   838  0211                     	;# 
   839  0212                     	;# 
   840  0212                     	;# 
   841  0213                     	;# 
   842  0213                     	;# 
   843  0214                     	;# 
   844  0214                     	;# 
   845  0215                     	;# 
   846  0215                     	;# 
   847  0215                     	;# 
   848  0216                     	;# 
   849  0216                     	;# 
   850  0217                     	;# 
   851  0217                     	;# 
   852  0291                     	;# 
   853  0291                     	;# 
   854  0292                     	;# 
   855  0293                     	;# 
   856  0294                     	;# 
   857  0295                     	;# 
   858  0295                     	;# 
   859  0296                     	;# 
   860  0391                     	;# 
   861  0392                     	;# 
   862  0393                     	;# 
   863  039A                     	;# 
   864  039C                     	;# 
   865  039D                     	;# 
   866  039E                     	;# 
   867  039F                     	;# 
   868  0FE4                     	;# 
   869  0FE5                     	;# 
   870  0FE6                     	;# 
   871  0FE7                     	;# 
   872  0FE8                     	;# 
   873  0FE9                     	;# 
   874  0FEA                     	;# 
   875  0FEB                     	;# 
   876  0FED                     	;# 
   877  0FEE                     	;# 
   878  0FEF                     	;# 
   879  0000                     	;# 
   880  0001                     	;# 
   881  0002                     	;# 
   882  0003                     	;# 
   883  0004                     	;# 
   884  0005                     	;# 
   885  0006                     	;# 
   886  0007                     	;# 
   887  0008                     	;# 
   888  0009                     	;# 
   889  000A                     	;# 
   890  000B                     	;# 
   891  000C                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0015                     	;# 
   895  0016                     	;# 
   896  0016                     	;# 
   897  0017                     	;# 
   898  0018                     	;# 
   899  0019                     	;# 
   900  001A                     	;# 
   901  001B                     	;# 
   902  001C                     	;# 
   903  001E                     	;# 
   904  001F                     	;# 
   905  008C                     	;# 
   906  0091                     	;# 
   907  0092                     	;# 
   908  0095                     	;# 
   909  0096                     	;# 
   910  0097                     	;# 
   911  0098                     	;# 
   912  0099                     	;# 
   913  009A                     	;# 
   914  009B                     	;# 
   915  009B                     	;# 
   916  009C                     	;# 
   917  009D                     	;# 
   918  009E                     	;# 
   919  010C                     	;# 
   920  0111                     	;# 
   921  0112                     	;# 
   922  0115                     	;# 
   923  0116                     	;# 
   924  0117                     	;# 
   925  0118                     	;# 
   926  0119                     	;# 
   927  011A                     	;# 
   928  011B                     	;# 
   929  011D                     	;# 
   930  011D                     	;# 
   931  018C                     	;# 
   932  0191                     	;# 
   933  0191                     	;# 
   934  0192                     	;# 
   935  0193                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0194                     	;# 
   939  0195                     	;# 
   940  0196                     	;# 
   941  0199                     	;# 
   942  019A                     	;# 
   943  019B                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019C                     	;# 
   949  019D                     	;# 
   950  019E                     	;# 
   951  019F                     	;# 
   952  020C                     	;# 
   953  0211                     	;# 
   954  0211                     	;# 
   955  0212                     	;# 
   956  0212                     	;# 
   957  0213                     	;# 
   958  0213                     	;# 
   959  0214                     	;# 
   960  0214                     	;# 
   961  0215                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0216                     	;# 
   965  0216                     	;# 
   966  0217                     	;# 
   967  0217                     	;# 
   968  0291                     	;# 
   969  0291                     	;# 
   970  0292                     	;# 
   971  0293                     	;# 
   972  0294                     	;# 
   973  0295                     	;# 
   974  0295                     	;# 
   975  0296                     	;# 
   976  0391                     	;# 
   977  0392                     	;# 
   978  0393                     	;# 
   979  039A                     	;# 
   980  039C                     	;# 
   981  039D                     	;# 
   982  039E                     	;# 
   983  039F                     	;# 
   984  0FE4                     	;# 
   985  0FE5                     	;# 
   986  0FE6                     	;# 
   987  0FE7                     	;# 
   988  0FE8                     	;# 
   989  0FE9                     	;# 
   990  0FEA                     	;# 
   991  0FEB                     	;# 
   992  0FED                     	;# 
   993  0FEE                     	;# 
   994  0FEF                     	;# 
   995  0000                     	;# 
   996  0001                     	;# 
   997  0002                     	;# 
   998  0003                     	;# 
   999  0004                     	;# 
  1000  0005                     	;# 
  1001  0006                     	;# 
  1002  0007                     	;# 
  1003  0008                     	;# 
  1004  0009                     	;# 
  1005  000A                     	;# 
  1006  000B                     	;# 
  1007  000C                     	;# 
  1008  0011                     	;# 
  1009  0012                     	;# 
  1010  0015                     	;# 
  1011  0016                     	;# 
  1012  0016                     	;# 
  1013  0017                     	;# 
  1014  0018                     	;# 
  1015  0019                     	;# 
  1016  001A                     	;# 
  1017  001B                     	;# 
  1018  001C                     	;# 
  1019  001E                     	;# 
  1020  001F                     	;# 
  1021  008C                     	;# 
  1022  0091                     	;# 
  1023  0092                     	;# 
  1024  0095                     	;# 
  1025  0096                     	;# 
  1026  0097                     	;# 
  1027  0098                     	;# 
  1028  0099                     	;# 
  1029  009A                     	;# 
  1030  009B                     	;# 
  1031  009B                     	;# 
  1032  009C                     	;# 
  1033  009D                     	;# 
  1034  009E                     	;# 
  1035  010C                     	;# 
  1036  0111                     	;# 
  1037  0112                     	;# 
  1038  0115                     	;# 
  1039  0116                     	;# 
  1040  0117                     	;# 
  1041  0118                     	;# 
  1042  0119                     	;# 
  1043  011A                     	;# 
  1044  011B                     	;# 
  1045  011D                     	;# 
  1046  011D                     	;# 
  1047  018C                     	;# 
  1048  0191                     	;# 
  1049  0191                     	;# 
  1050  0192                     	;# 
  1051  0193                     	;# 
  1052  0193                     	;# 
  1053  0193                     	;# 
  1054  0194                     	;# 
  1055  0195                     	;# 
  1056  0196                     	;# 
  1057  0199                     	;# 
  1058  019A                     	;# 
  1059  019B                     	;# 
  1060  019B                     	;# 
  1061  019B                     	;# 
  1062  019B                     	;# 
  1063  019C                     	;# 
  1064  019C                     	;# 
  1065  019D                     	;# 
  1066  019E                     	;# 
  1067  019F                     	;# 
  1068  020C                     	;# 
  1069  0211                     	;# 
  1070  0211                     	;# 
  1071  0212                     	;# 
  1072  0212                     	;# 
  1073  0213                     	;# 
  1074  0213                     	;# 
  1075  0214                     	;# 
  1076  0214                     	;# 
  1077  0215                     	;# 
  1078  0215                     	;# 
  1079  0215                     	;# 
  1080  0216                     	;# 
  1081  0216                     	;# 
  1082  0217                     	;# 
  1083  0217                     	;# 
  1084  0291                     	;# 
  1085  0291                     	;# 
  1086  0292                     	;# 
  1087  0293                     	;# 
  1088  0294                     	;# 
  1089  0295                     	;# 
  1090  0295                     	;# 
  1091  0296                     	;# 
  1092  0391                     	;# 
  1093  0392                     	;# 
  1094  0393                     	;# 
  1095  039A                     	;# 
  1096  039C                     	;# 
  1097  039D                     	;# 
  1098  039E                     	;# 
  1099  039F                     	;# 
  1100  0FE4                     	;# 
  1101  0FE5                     	;# 
  1102  0FE6                     	;# 
  1103  0FE7                     	;# 
  1104  0FE8                     	;# 
  1105  0FE9                     	;# 
  1106  0FEA                     	;# 
  1107  0FEB                     	;# 
  1108  0FED                     	;# 
  1109  0FEE                     	;# 
  1110  0FEF                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0008                     	;# 
  1120  0009                     	;# 
  1121  000A                     	;# 
  1122  000B                     	;# 
  1123  000C                     	;# 
  1124  0011                     	;# 
  1125  0012                     	;# 
  1126  0015                     	;# 
  1127  0016                     	;# 
  1128  0016                     	;# 
  1129  0017                     	;# 
  1130  0018                     	;# 
  1131  0019                     	;# 
  1132  001A                     	;# 
  1133  001B                     	;# 
  1134  001C                     	;# 
  1135  001E                     	;# 
  1136  001F                     	;# 
  1137  008C                     	;# 
  1138  0091                     	;# 
  1139  0092                     	;# 
  1140  0095                     	;# 
  1141  0096                     	;# 
  1142  0097                     	;# 
  1143  0098                     	;# 
  1144  0099                     	;# 
  1145  009A                     	;# 
  1146  009B                     	;# 
  1147  009B                     	;# 
  1148  009C                     	;# 
  1149  009D                     	;# 
  1150  009E                     	;# 
  1151  010C                     	;# 
  1152  0111                     	;# 
  1153  0112                     	;# 
  1154  0115                     	;# 
  1155  0116                     	;# 
  1156  0117                     	;# 
  1157  0118                     	;# 
  1158  0119                     	;# 
  1159  011A                     	;# 
  1160  011B                     	;# 
  1161  011D                     	;# 
  1162  011D                     	;# 
  1163  018C                     	;# 
  1164  0191                     	;# 
  1165  0191                     	;# 
  1166  0192                     	;# 
  1167  0193                     	;# 
  1168  0193                     	;# 
  1169  0193                     	;# 
  1170  0194                     	;# 
  1171  0195                     	;# 
  1172  0196                     	;# 
  1173  0199                     	;# 
  1174  019A                     	;# 
  1175  019B                     	;# 
  1176  019B                     	;# 
  1177  019B                     	;# 
  1178  019B                     	;# 
  1179  019C                     	;# 
  1180  019C                     	;# 
  1181  019D                     	;# 
  1182  019E                     	;# 
  1183  019F                     	;# 
  1184  020C                     	;# 
  1185  0211                     	;# 
  1186  0211                     	;# 
  1187  0212                     	;# 
  1188  0212                     	;# 
  1189  0213                     	;# 
  1190  0213                     	;# 
  1191  0214                     	;# 
  1192  0214                     	;# 
  1193  0215                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0216                     	;# 
  1197  0216                     	;# 
  1198  0217                     	;# 
  1199  0217                     	;# 
  1200  0291                     	;# 
  1201  0291                     	;# 
  1202  0292                     	;# 
  1203  0293                     	;# 
  1204  0294                     	;# 
  1205  0295                     	;# 
  1206  0295                     	;# 
  1207  0296                     	;# 
  1208  0391                     	;# 
  1209  0392                     	;# 
  1210  0393                     	;# 
  1211  039A                     	;# 
  1212  039C                     	;# 
  1213  039D                     	;# 
  1214  039E                     	;# 
  1215  039F                     	;# 
  1216  0FE4                     	;# 
  1217  0FE5                     	;# 
  1218  0FE6                     	;# 
  1219  0FE7                     	;# 
  1220  0FE8                     	;# 
  1221  0FE9                     	;# 
  1222  0FEA                     	;# 
  1223  0FEB                     	;# 
  1224  0FED                     	;# 
  1225  0FEE                     	;# 
  1226  0FEF                     	;# 
  1227  000B                     _INTCONbits	set	11
  1228  0015                     _TMR0	set	21
  1229  0095                     _OPTION_REGbits	set	149
  1230  008C                     _TRISA	set	140
  1231  0097                     _WDTCON	set	151
  1232  0098                     _OSCTUNE	set	152
  1233  0099                     _OSCCON	set	153
  1234  009D                     _ADCON0bits	set	157
  1235  009C                     _ADRESH	set	156
  1236  009B                     _ADRESL	set	155
  1237  009E                     _ADCON1	set	158
  1238  009D                     _ADCON0	set	157
  1239  0095                     _OPTION_REG	set	149
  1240  04D6                     _PLLR	set	1238
  1241  010C                     _LATAbits	set	268
  1242  011D                     _APFCON	set	285
  1243  010C                     _LATA	set	268
  1244  0116                     _BORCON	set	278
  1245  018C                     _ANSELA	set	396
  1246  020C                     _WPUA	set	524
  1247                           
  1248                           ; #config settings
  1249  0000                     
  1250                           	psect	cinit
  1251  000D                     start_initialization:	
  1252  000D                     __initialization:	
  1253                           
  1254                           ; Clear objects allocated to COMMON
  1255  000D  01F9               	clrf	__pbssCOMMON& (0+127)
  1256  000E  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1257  000F  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1258                           
  1259                           ; Clear objects allocated to BANK0
  1260  0010  3020               	movlw	low __pbssBANK0
  1261  0011  0084               	movwf	4
  1262  0012  3000               	movlw	high __pbssBANK0
  1263  0013  0085               	movwf	5
  1264  0014  3010               	movlw	16
  1265  0015  2182               	fcall	clear_ram0
  1266  0016                     end_of_initialization:	
  1267                           ;End of C runtime variable initialization code
  1268                           
  1269  0016                     __end_of__initialization:	
  1270  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1271  0017  0020               	movlb	0
  1272  0018  28F0               	ljmp	_main	;jump to C main() function
  1273                           
  1274                           	psect	bssCOMMON
  1275  0079                     __pbssCOMMON:	
  1276  0079                     _timebase_flags:	
  1277  0079                     	ds	2
  1278  007B                     _timer0ReloadVal:	
  1279  007B                     	ds	1
  1280                           
  1281                           	psect	bssBANK0
  1282  0020                     __pbssBANK0:	
  1283  0020                     _timebase_timers:	
  1284  0020                     	ds	8
  1285  0028                     gen_pulse@filterTrimmer:	
  1286  0028                     	ds	2
  1287  002A                     gen_pulse@count_pulse:	
  1288  002A                     	ds	2
  1289  002C                     _convertedValue:	
  1290  002C                     	ds	2
  1291  002E                     _TMR0_InterruptHandler:	
  1292  002E                     	ds	2
  1293                           
  1294                           	psect	clrtext
  1295  0182                     clear_ram0:	
  1296                           ;	Called with FSR0 containing the base address, and
  1297                           ;	WREG with the size to clear
  1298                           
  1299  0182  0064               	clrwdt	;clear the watchdog before getting into this loop
  1300  0183                     clrloop0:	
  1301  0183  0180               	clrf	0	;clear RAM location pointed to by FSR
  1302  0184  3101               	addfsr 0,1
  1303  0185  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1304  0186  2983               	goto	clrloop0	;have we reached the end yet?
  1305  0187  3400               	retlw	0	;all done for this memory range, return
  1306                           
  1307                           	psect	cstackCOMMON
  1308  0070                     __pcstackCOMMON:	
  1309  0070                     ?_TMR0_DefaultInterruptHandler:	
  1310  0070                     ?_TMR0_CallBack:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_TimeBase:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ??_TimeBase:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_PIN_MANAGER_Initialize:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ?_OSCILLATOR_Initialize:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_WDT_Initialize:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ?_gen_pulse:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?_TMR0_Initialize:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_TMR0_ISR:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ?_ADC_Initialize:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_ADC_StartConversion:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ?_INTERRUPT_InterruptManager:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ?_SYSTEM_Initialize:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_TimeBaseVarInit:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_SystemInit:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_ReadAnalog:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_main:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361                           
  1362                           ; 1 bytes @ 0x0
  1363  0070                     	ds	1
  1364  0071                     ?_TMR0_SetInterruptHandler:	
  1365  0071                     ??_TMR0_DefaultInterruptHandler:	
  1366                           ; 1 bytes @ 0x1
  1367                           
  1368  0071                     ??_TMR0_CallBack:	
  1369                           ; 1 bytes @ 0x1
  1370                           
  1371  0071                     ??_PIN_MANAGER_Initialize:	
  1372                           ; 1 bytes @ 0x1
  1373                           
  1374  0071                     ??_OSCILLATOR_Initialize:	
  1375                           ; 1 bytes @ 0x1
  1376                           
  1377  0071                     ??_WDT_Initialize:	
  1378                           ; 1 bytes @ 0x1
  1379                           
  1380  0071                     ??_TMR0_ISR:	
  1381                           ; 1 bytes @ 0x1
  1382                           
  1383  0071                     ??_ADC_Initialize:	
  1384                           ; 1 bytes @ 0x1
  1385                           
  1386  0071                     ??_ADC_StartConversion:	
  1387                           ; 1 bytes @ 0x1
  1388                           
  1389  0071                     ??_INTERRUPT_InterruptManager:	
  1390                           ; 1 bytes @ 0x1
  1391                           
  1392  0071                     ??_TimeBaseVarInit:	
  1393                           ; 1 bytes @ 0x1
  1394                           
  1395  0071                     ??_SystemInit:	
  1396                           ; 1 bytes @ 0x1
  1397                           
  1398  0071                     ?_ADC_GetConversionResult:	
  1399                           ; 1 bytes @ 0x1
  1400                           
  1401  0071                     ?___wmul:	
  1402                           ; 2 bytes @ 0x1
  1403                           
  1404  0071                     ?___lwdiv:	
  1405                           ; 2 bytes @ 0x1
  1406                           
  1407  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
  1408                           ; 2 bytes @ 0x1
  1409                           
  1410  0071                     ___wmul@multiplier:	
  1411                           ; 2 bytes @ 0x1
  1412                           
  1413  0071                     ___lwdiv@divisor:	
  1414                           ; 2 bytes @ 0x1
  1415                           
  1416                           
  1417                           ; 2 bytes @ 0x1
  1418  0071                     	ds	2
  1419  0073                     ??_TMR0_SetInterruptHandler:	
  1420  0073                     ??_TMR0_Initialize:	
  1421                           ; 1 bytes @ 0x3
  1422                           
  1423  0073                     ??_ADC_GetConversionResult:	
  1424                           ; 1 bytes @ 0x3
  1425                           
  1426  0073                     ??_ReadAnalog:	
  1427                           ; 1 bytes @ 0x3
  1428                           
  1429  0073                     ___wmul@multiplicand:	
  1430                           ; 1 bytes @ 0x3
  1431                           
  1432  0073                     ___lwdiv@dividend:	
  1433                           ; 2 bytes @ 0x3
  1434                           
  1435                           
  1436                           ; 2 bytes @ 0x3
  1437  0073                     	ds	1
  1438  0074                     ??_SYSTEM_Initialize:	
  1439                           
  1440                           ; 1 bytes @ 0x4
  1441  0074                     	ds	1
  1442  0075                     ??___wmul:	
  1443  0075                     ??___lwdiv:	
  1444                           ; 1 bytes @ 0x5
  1445                           
  1446  0075                     ___wmul@product:	
  1447                           ; 1 bytes @ 0x5
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x5
  1451  0075                     	ds	1
  1452  0076                     ___lwdiv@counter:	
  1453                           
  1454                           ; 1 bytes @ 0x6
  1455  0076                     	ds	1
  1456  0077                     ___lwdiv@quotient:	
  1457                           
  1458                           ; 2 bytes @ 0x7
  1459  0077                     	ds	2
  1460  0079                     ??_gen_pulse:	
  1461  0079                     ??_main:	
  1462                           ; 1 bytes @ 0x9
  1463                           
  1464                           
  1465                           	psect	cstackBANK0
  1466  0030                     __pcstackBANK0:	
  1467                           ; 1 bytes @ 0x9
  1468                           
  1469  0030                     gen_pulse@tempThreshold:	
  1470                           
  1471                           ; 2 bytes @ 0x0
  1472  0030                     	ds	2
  1473                           
  1474                           	psect	maintext
  1475  00F0                     __pmaintext:	
  1476 ;;
  1477 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1478 ;;
  1479 ;; *************** function _main *****************
  1480 ;; Defined at:
  1481 ;;		line 89 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : B1F/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1
  1495 ;;      Params:         0       0       0
  1496 ;;      Locals:         0       0       0
  1497 ;;      Temps:          0       0       0
  1498 ;;      Totals:         0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels required when called:    8
  1501 ;; This function calls:
  1502 ;;		_ReadAnalog
  1503 ;;		_SYSTEM_Initialize
  1504 ;;		_SystemInit
  1505 ;;		_gen_pulse
  1506 ;; This function is called by:
  1507 ;;		Startup code after reset
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           
  1512                           ;psect for function _main
  1513  00F0                     _main:	
  1514                           
  1515                           ;main.c: 92:     SYSTEM_Initialize();
  1516                           
  1517                           ;incstack = 0
  1518                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1519  00F0  2188               	fcall	_SYSTEM_Initialize
  1520                           
  1521                           ;main.c: 98:     (INTCONbits.GIE = 1);
  1522  00F1  178B               	bsf	11,7	;volatile
  1523                           
  1524                           ;main.c: 101:     (INTCONbits.PEIE = 1);
  1525  00F2  170B               	bsf	11,6	;volatile
  1526                           
  1527                           ;main.c: 110:     SystemInit();
  1528  00F3  21AA               	fcall	_SystemInit
  1529  00F4  0064               	clrwdt	;# 
  1530  00F5                     l1335:	
  1531                           
  1532                           ;main.c: 113:     {;main.c: 115:         if (timebase_flags.time_100us == 1)
  1533  00F5  1879               	btfsc	_timebase_flags,0	;volatile
  1534                           
  1535                           ;main.c: 116:         {;main.c: 117:             timebase_flags.time_100us = 0;
  1536  00F6  1079               	bcf	_timebase_flags,0	;volatile
  1537                           
  1538                           ;main.c: 122:         if (timebase_flags.time_1ms == 1)
  1539                           
  1540                           ;main.c: 118:         }
  1541  00F7  1CF9               	btfss	_timebase_flags,1	;volatile
  1542  00F8  28FB               	goto	l1343
  1543                           
  1544                           ;main.c: 123:         {;main.c: 124:             timebase_flags.time_1ms = 0;
  1545  00F9  10F9               	bcf	_timebase_flags,1	;volatile
  1546                           
  1547                           ;main.c: 127:             gen_pulse();
  1548  00FA  206B               	fcall	_gen_pulse
  1549  00FB                     l1343:	
  1550                           
  1551                           ;main.c: 132:         if (timebase_flags.time_10ms == 1)
  1552  00FB  1D79               	btfss	_timebase_flags,2	;volatile
  1553  00FC  28FF               	goto	l1349
  1554                           
  1555                           ;main.c: 133:         {;main.c: 134:             timebase_flags.time_10ms = 0;
  1556  00FD  1179               	bcf	_timebase_flags,2	;volatile
  1557                           
  1558                           ;main.c: 137:             ReadAnalog();
  1559  00FE  21A4               	fcall	_ReadAnalog
  1560  00FF                     l1349:	
  1561                           
  1562                           ;main.c: 143:         if (timebase_flags.time_100ms == 1)
  1563  00FF  19F9               	btfsc	_timebase_flags,3	;volatile
  1564                           
  1565                           ;main.c: 144:         {;main.c: 145:             timebase_flags.time_100ms = 0;
  1566  0100  11F9               	bcf	_timebase_flags,3	;volatile
  1567                           
  1568                           ;main.c: 150:         if (timebase_flags.time_500ms == 1)
  1569                           
  1570                           ;main.c: 146:         }
  1571  0101  1E79               	btfss	_timebase_flags,4	;volatile
  1572  0102  290F               	goto	l1357
  1573                           
  1574                           ;main.c: 151:         {;main.c: 152:             timebase_flags.time_500ms = 0;
  1575  0103  1279               	bcf	_timebase_flags,4	;volatile
  1576  0104  1003               	clrc
  1577  0105  0022               	movlb	2	; select bank2
  1578  0106  1C8C               	btfss	12,1	;volatile
  1579  0107  1403               	setc
  1580  0108  1C03               	btfss	3,0
  1581  0109  290D               	goto	u940
  1582  010A  0022               	movlb	2	; select bank2
  1583  010B  148C               	bsf	12,1	;volatile
  1584  010C  290F               	goto	l1357
  1585  010D                     u940:	
  1586  010D  0022               	movlb	2	; select bank2
  1587  010E  108C               	bcf	12,1	;volatile
  1588  010F                     l1357:	
  1589                           
  1590                           ;main.c: 159:         if (timebase_flags.time_1s == 1)
  1591  010F  1EF9               	btfss	_timebase_flags,5	;volatile
  1592  0110  28F5               	goto	l1335
  1593                           
  1594                           ;main.c: 160:         {;main.c: 161:             timebase_flags.time_1s = 0;
  1595  0111  12F9               	bcf	_timebase_flags,5	;volatile
  1596  0112  0064               	clrwdt	;# 
  1597  0113  28F5               	goto	l1335
  1598  0114                     __end_of_main:	
  1599                           
  1600                           	psect	text1
  1601  006B                     __ptext1:	
  1602 ;; *************** function _gen_pulse *****************
  1603 ;; Defined at:
  1604 ;;		line 189 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  tempThreshol    2    0[BANK0 ] unsigned short 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1
  1618 ;;      Params:         0       0       0
  1619 ;;      Locals:         0       2       0
  1620 ;;      Temps:          0       0       0
  1621 ;;      Totals:         0       2       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    6
  1625 ;; This function calls:
  1626 ;;		___lwdiv
  1627 ;;		___wmul
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _gen_pulse
  1635  006B                     _gen_pulse:	
  1636                           
  1637                           ;main.c: 191:     static uint16_t count_pulse;;main.c: 192:     static uint16_t filterTr
      +                          immer;;main.c: 193:     uint16_t tempThreshold;;main.c: 195:  count_pulse++;
  1638                           
  1639                           ;incstack = 0
  1640                           ; Regs used in _gen_pulse: [wreg+status,2+status,0+pclath+cstack]
  1641  006B  3001               	movlw	1
  1642  006C  0020               	movlb	0	; select bank0
  1643  006D  07AA               	addwf	gen_pulse@count_pulse,f
  1644  006E  3000               	movlw	0
  1645  006F  3DAB               	addwfc	gen_pulse@count_pulse+1,f
  1646                           
  1647                           ;main.c: 196:     if (convertedValue > filterTrimmer)
  1648  0070  0828               	movf	gen_pulse@filterTrimmer,w
  1649  0071  0429               	iorwf	gen_pulse@filterTrimmer+1,w
  1650  0072  1903               	btfsc	3,2
  1651  0073  2878               	goto	l212
  1652                           
  1653                           ;main.c: 199:         filterTrimmer --;
  1654  0074  3001               	movlw	1
  1655  0075  02A8               	subwf	gen_pulse@filterTrimmer,f
  1656  0076  3000               	movlw	0
  1657  0077  3BA9               	subwfb	gen_pulse@filterTrimmer+1,f
  1658  0078                     l212:	
  1659                           
  1660                           ;main.c: 202:  tempThreshold = filterTrimmer;
  1661  0078  0829               	movf	gen_pulse@filterTrimmer+1,w
  1662  0079  00B1               	movwf	gen_pulse@tempThreshold+1
  1663  007A  0828               	movf	gen_pulse@filterTrimmer,w
  1664  007B  00B0               	movwf	gen_pulse@tempThreshold
  1665                           
  1666                           ;main.c: 203:     if (tempThreshold > 25)
  1667  007C  3000               	movlw	0
  1668  007D  0231               	subwf	gen_pulse@tempThreshold+1,w
  1669  007E  301A               	movlw	26
  1670  007F  1903               	skipnz
  1671  0080  0230               	subwf	gen_pulse@tempThreshold,w
  1672  0081  1C03               	skipc
  1673  0082  28A4               	goto	l1319
  1674                           
  1675                           ;main.c: 204:     {;main.c: 205:         tempThreshold -= 25;
  1676  0083  3019               	movlw	25
  1677  0084  02B0               	subwf	gen_pulse@tempThreshold,f
  1678  0085  3000               	movlw	0
  1679  0086  3BB1               	subwfb	gen_pulse@tempThreshold+1,f
  1680                           
  1681                           ;main.c: 206:         tempThreshold *= 50;
  1682  0087  3032               	movlw	50
  1683  0088  00F1               	movwf	___wmul@multiplier
  1684  0089  3000               	movlw	0
  1685  008A  00F2               	movwf	___wmul@multiplier+1
  1686  008B  0831               	movf	gen_pulse@tempThreshold+1,w
  1687  008C  00F4               	movwf	___wmul@multiplicand+1
  1688  008D  0830               	movf	gen_pulse@tempThreshold,w
  1689  008E  00F3               	movwf	___wmul@multiplicand
  1690  008F  2114               	fcall	___wmul
  1691  0090  0872               	movf	?___wmul+1,w
  1692  0091  0020               	movlb	0	; select bank0
  1693  0092  00B1               	movwf	gen_pulse@tempThreshold+1
  1694  0093  0871               	movf	?___wmul,w
  1695  0094  00B0               	movwf	gen_pulse@tempThreshold
  1696                           
  1697                           ;main.c: 207:         tempThreshold /= 920;
  1698  0095  3098               	movlw	152
  1699  0096  00F1               	movwf	___lwdiv@divisor
  1700  0097  3003               	movlw	3
  1701  0098  00F2               	movwf	___lwdiv@divisor+1
  1702  0099  0831               	movf	gen_pulse@tempThreshold+1,w
  1703  009A  00F4               	movwf	___lwdiv@dividend+1
  1704  009B  0830               	movf	gen_pulse@tempThreshold,w
  1705  009C  00F3               	movwf	___lwdiv@dividend
  1706  009D  20BC               	fcall	___lwdiv
  1707  009E  0872               	movf	?___lwdiv+1,w
  1708  009F  0020               	movlb	0	; select bank0
  1709  00A0  00B1               	movwf	gen_pulse@tempThreshold+1
  1710  00A1  0871               	movf	?___lwdiv,w
  1711  00A2  00B0               	movwf	gen_pulse@tempThreshold
  1712                           
  1713                           ;main.c: 208:     }
  1714  00A3  28A6               	goto	l1321
  1715  00A4                     l1319:	
  1716                           
  1717                           ;main.c: 210:     {;main.c: 211:        tempThreshold = 0;
  1718  00A4  01B0               	clrf	gen_pulse@tempThreshold
  1719  00A5  01B1               	clrf	gen_pulse@tempThreshold+1
  1720  00A6                     l1321:	
  1721                           
  1722                           ;main.c: 214:  if (count_pulse >= tempThreshold)
  1723  00A6  0831               	movf	gen_pulse@tempThreshold+1,w
  1724  00A7  022B               	subwf	gen_pulse@count_pulse+1,w
  1725  00A8  1D03               	skipz
  1726  00A9  28AC               	goto	u865
  1727  00AA  0830               	movf	gen_pulse@tempThreshold,w
  1728  00AB  022A               	subwf	gen_pulse@count_pulse,w
  1729  00AC                     u865:	
  1730  00AC  1C03               	skipc
  1731  00AD  0008               	return
  1732                           
  1733                           ;main.c: 215:     {;main.c: 216:   count_pulse= 0;
  1734  00AE  01AA               	clrf	gen_pulse@count_pulse
  1735  00AF  01AB               	clrf	gen_pulse@count_pulse+1
  1736  00B0  1003               	clrc
  1737  00B1  0022               	movlb	2	; select bank2
  1738  00B2  1E8C               	btfss	12,5	;volatile
  1739  00B3  1403               	setc
  1740  00B4  1C03               	btfss	3,0
  1741  00B5  28B9               	goto	u870
  1742  00B6  0022               	movlb	2	; select bank2
  1743  00B7  168C               	bsf	12,5	;volatile
  1744  00B8  0008               	return
  1745  00B9                     u870:	
  1746  00B9  0022               	movlb	2	; select bank2
  1747  00BA  128C               	bcf	12,5	;volatile
  1748  00BB  0008               	return
  1749  00BC                     __end_of_gen_pulse:	
  1750                           
  1751                           	psect	text2
  1752  0114                     __ptext2:	
  1753 ;; *************** function ___wmul *****************
  1754 ;; Defined at:
  1755 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  multiplier      2    1[COMMON] unsigned int 
  1758 ;;  multiplicand    2    3[COMMON] unsigned int 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  product         2    5[COMMON] unsigned int 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  2    1[COMMON] unsigned int 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1
  1770 ;;      Params:         4       0       0
  1771 ;;      Locals:         2       0       0
  1772 ;;      Temps:          0       0       0
  1773 ;;      Totals:         6       0       0
  1774 ;;Total ram usage:        6 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    5
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_gen_pulse
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function ___wmul
  1786  0114                     ___wmul:	
  1787                           
  1788                           ;incstack = 0
  1789                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1790  0114  01F5               	clrf	___wmul@product
  1791  0115  01F6               	clrf	___wmul@product+1
  1792  0116                     l1267:	
  1793  0116  1C71               	btfss	___wmul@multiplier,0
  1794  0117  291C               	goto	l369
  1795  0118  0873               	movf	___wmul@multiplicand,w
  1796  0119  07F5               	addwf	___wmul@product,f
  1797  011A  0874               	movf	___wmul@multiplicand+1,w
  1798  011B  3DF6               	addwfc	___wmul@product+1,f
  1799  011C                     l369:	
  1800  011C  3001               	movlw	1
  1801  011D                     u745:	
  1802  011D  35F3               	lslf	___wmul@multiplicand,f
  1803  011E  0DF4               	rlf	___wmul@multiplicand+1,f
  1804  011F  0B89               	decfsz	9,f
  1805  0120  291D               	goto	u745
  1806  0121  3001               	movlw	1
  1807  0122                     u755:	
  1808  0122  36F2               	lsrf	___wmul@multiplier+1,f
  1809  0123  0CF1               	rrf	___wmul@multiplier,f
  1810  0124  0B89               	decfsz	9,f
  1811  0125  2922               	goto	u755
  1812  0126  0871               	movf	___wmul@multiplier,w
  1813  0127  0472               	iorwf	___wmul@multiplier+1,w
  1814  0128  1D03               	btfss	3,2
  1815  0129  2916               	goto	l1267
  1816  012A  0876               	movf	___wmul@product+1,w
  1817  012B  00F2               	movwf	?___wmul+1
  1818  012C  0875               	movf	___wmul@product,w
  1819  012D  00F1               	movwf	?___wmul
  1820  012E  0008               	return
  1821  012F                     __end_of___wmul:	
  1822                           
  1823                           	psect	text3
  1824  00BC                     __ptext3:	
  1825 ;; *************** function ___lwdiv *****************
  1826 ;; Defined at:
  1827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  divisor         2    1[COMMON] unsigned int 
  1830 ;;  dividend        2    3[COMMON] unsigned int 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  quotient        2    7[COMMON] unsigned int 
  1833 ;;  counter         1    6[COMMON] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  2    1[COMMON] unsigned int 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1
  1843 ;;      Params:         4       0       0
  1844 ;;      Locals:         3       0       0
  1845 ;;      Temps:          1       0       0
  1846 ;;      Totals:         8       0       0
  1847 ;;Total ram usage:        8 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    5
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_gen_pulse
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function ___lwdiv
  1859  00BC                     ___lwdiv:	
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1863  00BC  01F7               	clrf	___lwdiv@quotient
  1864  00BD  01F8               	clrf	___lwdiv@quotient+1
  1865  00BE  0871               	movf	___lwdiv@divisor,w
  1866  00BF  0472               	iorwf	___lwdiv@divisor+1,w
  1867  00C0  1903               	btfsc	3,2
  1868  00C1  28EB               	goto	l1301
  1869  00C2  01F6               	clrf	___lwdiv@counter
  1870  00C3  0AF6               	incf	___lwdiv@counter,f
  1871  00C4                     l1289:	
  1872  00C4  1BF2               	btfsc	___lwdiv@divisor+1,7
  1873  00C5  28D0               	goto	l1291
  1874  00C6  3001               	movlw	1
  1875  00C7                     u785:	
  1876  00C7  35F1               	lslf	___lwdiv@divisor,f
  1877  00C8  0DF2               	rlf	___lwdiv@divisor+1,f
  1878  00C9  0B89               	decfsz	9,f
  1879  00CA  28C7               	goto	u785
  1880  00CB  3001               	movlw	1
  1881  00CC  00F5               	movwf	??___lwdiv
  1882  00CD  0875               	movf	??___lwdiv,w
  1883  00CE  07F6               	addwf	___lwdiv@counter,f
  1884  00CF  28C4               	goto	l1289
  1885  00D0                     l1291:	
  1886  00D0  3001               	movlw	1
  1887  00D1                     u805:	
  1888  00D1  35F7               	lslf	___lwdiv@quotient,f
  1889  00D2  0DF8               	rlf	___lwdiv@quotient+1,f
  1890  00D3  0B89               	decfsz	9,f
  1891  00D4  28D1               	goto	u805
  1892  00D5  0872               	movf	___lwdiv@divisor+1,w
  1893  00D6  0274               	subwf	___lwdiv@dividend+1,w
  1894  00D7  1D03               	skipz
  1895  00D8  28DB               	goto	u815
  1896  00D9  0871               	movf	___lwdiv@divisor,w
  1897  00DA  0273               	subwf	___lwdiv@dividend,w
  1898  00DB                     u815:	
  1899  00DB  1C03               	skipc
  1900  00DC  28E2               	goto	l1297
  1901  00DD  0871               	movf	___lwdiv@divisor,w
  1902  00DE  02F3               	subwf	___lwdiv@dividend,f
  1903  00DF  0872               	movf	___lwdiv@divisor+1,w
  1904  00E0  3BF4               	subwfb	___lwdiv@dividend+1,f
  1905  00E1  1477               	bsf	___lwdiv@quotient,0
  1906  00E2                     l1297:	
  1907  00E2  3001               	movlw	1
  1908  00E3                     u825:	
  1909  00E3  36F2               	lsrf	___lwdiv@divisor+1,f
  1910  00E4  0CF1               	rrf	___lwdiv@divisor,f
  1911  00E5  0B89               	decfsz	9,f
  1912  00E6  28E3               	goto	u825
  1913  00E7  3001               	movlw	1
  1914  00E8  02F6               	subwf	___lwdiv@counter,f
  1915  00E9  1D03               	btfss	3,2
  1916  00EA  28D0               	goto	l1291
  1917  00EB                     l1301:	
  1918  00EB  0878               	movf	___lwdiv@quotient+1,w
  1919  00EC  00F2               	movwf	?___lwdiv+1
  1920  00ED  0877               	movf	___lwdiv@quotient,w
  1921  00EE  00F1               	movwf	?___lwdiv
  1922  00EF  0008               	return
  1923  00F0                     __end_of___lwdiv:	
  1924                           
  1925                           	psect	text4
  1926  01AA                     __ptext4:	
  1927 ;; *************** function _SystemInit *****************
  1928 ;; Defined at:
  1929 ;;		line 44 in file "sources/init.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1
  1943 ;;      Params:         0       0       0
  1944 ;;      Locals:         0       0       0
  1945 ;;      Temps:          0       0       0
  1946 ;;      Totals:         0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    6
  1950 ;; This function calls:
  1951 ;;		_TimeBaseVarInit
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _SystemInit
  1959  01AA                     _SystemInit:	
  1960                           
  1961                           ;sources/init.c: 47:     TimeBaseVarInit();
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in _SystemInit: [status,2+status,0+pclath+cstack]
  1965  01AA  2143               	fcall	_TimeBaseVarInit
  1966  01AB  0008               	return
  1967  01AC                     __end_of_SystemInit:	
  1968                           
  1969                           	psect	text5
  1970  0143                     __ptext5:	
  1971 ;; *************** function _TimeBaseVarInit *****************
  1972 ;; Defined at:
  1973 ;;		line 57 in file "sources/MCCinterface.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		status,2
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1
  1987 ;;      Params:         0       0       0
  1988 ;;      Locals:         0       0       0
  1989 ;;      Temps:          0       0       0
  1990 ;;      Totals:         0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    5
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_SystemInit
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _TimeBaseVarInit
  2003  0143                     _TimeBaseVarInit:	
  2004                           
  2005                           ;sources/MCCinterface.c: 59:     timebase_flags.time_100ms=0;
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _TimeBaseVarInit: [status,2]
  2009  0143  11F9               	bcf	_timebase_flags,3	;volatile
  2010                           
  2011                           ;sources/MCCinterface.c: 60:     timebase_flags.time_100us=0;
  2012  0144  1079               	bcf	_timebase_flags,0	;volatile
  2013                           
  2014                           ;sources/MCCinterface.c: 61:     timebase_flags.time_10ms=0;
  2015  0145  1179               	bcf	_timebase_flags,2	;volatile
  2016                           
  2017                           ;sources/MCCinterface.c: 62:     timebase_flags.time_1day=0;
  2018  0146  107A               	bcf	_timebase_flags+1,0	;volatile
  2019                           
  2020                           ;sources/MCCinterface.c: 63:     timebase_flags.time_1hour=0;
  2021  0147  13F9               	bcf	_timebase_flags,7	;volatile
  2022                           
  2023                           ;sources/MCCinterface.c: 64:     timebase_flags.time_1minute=0;
  2024  0148  1379               	bcf	_timebase_flags,6	;volatile
  2025                           
  2026                           ;sources/MCCinterface.c: 65:     timebase_flags.time_1ms=0;
  2027  0149  10F9               	bcf	_timebase_flags,1	;volatile
  2028                           
  2029                           ;sources/MCCinterface.c: 66:     timebase_flags.time_1s=0;
  2030  014A  12F9               	bcf	_timebase_flags,5	;volatile
  2031                           
  2032                           ;sources/MCCinterface.c: 67:     timebase_flags.time_500ms=0;
  2033  014B  1279               	bcf	_timebase_flags,4	;volatile
  2034                           
  2035                           ;sources/MCCinterface.c: 69:     timebase_timers.timer_100ms=0;
  2036  014C  0020               	movlb	0	; select bank0
  2037  014D  01A2               	clrf	_timebase_timers+2	;volatile
  2038                           
  2039                           ;sources/MCCinterface.c: 70:     timebase_timers.timer_10ms=0;
  2040  014E  01A1               	clrf	_timebase_timers+1	;volatile
  2041                           
  2042                           ;sources/MCCinterface.c: 71:     timebase_timers.timer_1day=0;
  2043  014F  01A7               	clrf	_timebase_timers+7	;volatile
  2044                           
  2045                           ;sources/MCCinterface.c: 72:     timebase_timers.timer_1hour=0;
  2046  0150  01A6               	clrf	_timebase_timers+6	;volatile
  2047                           
  2048                           ;sources/MCCinterface.c: 73:     timebase_timers.timer_1minute=0;
  2049  0151  01A5               	clrf	_timebase_timers+5	;volatile
  2050                           
  2051                           ;sources/MCCinterface.c: 74:     timebase_timers.timer_1ms=0;
  2052  0152  01A0               	clrf	_timebase_timers	;volatile
  2053                           
  2054                           ;sources/MCCinterface.c: 75:     timebase_timers.timer_1s=0;
  2055  0153  01A4               	clrf	_timebase_timers+4	;volatile
  2056                           
  2057                           ;sources/MCCinterface.c: 76:     timebase_timers.timer_500ms=0;
  2058  0154  01A3               	clrf	_timebase_timers+3	;volatile
  2059  0155  0008               	return
  2060  0156                     __end_of_TimeBaseVarInit:	
  2061                           
  2062                           	psect	text6
  2063  0188                     __ptext6:	
  2064 ;; *************** function _SYSTEM_Initialize *****************
  2065 ;; Defined at:
  2066 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, pclath, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1
  2080 ;;      Params:         0       0       0
  2081 ;;      Locals:         0       0       0
  2082 ;;      Temps:          0       0       0
  2083 ;;      Totals:         0       0       0
  2084 ;;Total ram usage:        0 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    7
  2087 ;; This function calls:
  2088 ;;		_ADC_Initialize
  2089 ;;		_OSCILLATOR_Initialize
  2090 ;;		_PIN_MANAGER_Initialize
  2091 ;;		_TMR0_Initialize
  2092 ;;		_WDT_Initialize
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           
  2099                           ;psect for function _SYSTEM_Initialize
  2100  0188                     _SYSTEM_Initialize:	
  2101                           
  2102                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2106  0188  2156               	fcall	_PIN_MANAGER_Initialize
  2107                           
  2108                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2109  0189  2170               	fcall	_OSCILLATOR_Initialize
  2110                           
  2111                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2112  018A  21A0               	fcall	_WDT_Initialize
  2113                           
  2114                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2115  018B  212F               	fcall	_TMR0_Initialize
  2116                           
  2117                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2118  018C  217A               	fcall	_ADC_Initialize
  2119  018D  0008               	return
  2120  018E                     __end_of_SYSTEM_Initialize:	
  2121                           
  2122                           	psect	text7
  2123  01A0                     __ptext7:	
  2124 ;; *************** function _WDT_Initialize *****************
  2125 ;; Defined at:
  2126 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1
  2140 ;;      Params:         0       0       0
  2141 ;;      Locals:         0       0       0
  2142 ;;      Temps:          0       0       0
  2143 ;;      Totals:         0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    5
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_SYSTEM_Initialize
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _WDT_Initialize
  2156  01A0                     _WDT_Initialize:	
  2157                           
  2158                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _WDT_Initialize: [wreg]
  2162  01A0  3016               	movlw	22
  2163  01A1  0021               	movlb	1	; select bank1
  2164  01A2  0097               	movwf	23	;volatile
  2165  01A3  0008               	return
  2166  01A4                     __end_of_WDT_Initialize:	
  2167                           
  2168                           	psect	text8
  2169  012F                     __ptext8:	
  2170 ;; *************** function _TMR0_Initialize *****************
  2171 ;; Defined at:
  2172 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, status,2, status,0, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1
  2186 ;;      Params:         0       0       0
  2187 ;;      Locals:         0       0       0
  2188 ;;      Temps:          1       0       0
  2189 ;;      Totals:         1       0       0
  2190 ;;Total ram usage:        1 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    6
  2193 ;; This function calls:
  2194 ;;		_TMR0_SetInterruptHandler
  2195 ;; This function is called by:
  2196 ;;		_SYSTEM_Initialize
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _TMR0_Initialize
  2202  012F                     _TMR0_Initialize:	
  2203                           
  2204                           ;mcc_generated_files/tmr0.c: 70:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2208  012F  0021               	movlb	1	; select bank1
  2209  0130  0815               	movf	21,w	;volatile
  2210  0131  39C0               	andlw	192
  2211  0132  3811               	iorlw	17
  2212  0133  0095               	movwf	21	;volatile
  2213                           
  2214                           ;mcc_generated_files/tmr0.c: 73:     TMR0 = 0x38;
  2215  0134  3038               	movlw	56
  2216  0135  0020               	movlb	0	; select bank0
  2217  0136  0095               	movwf	21	;volatile
  2218                           
  2219                           ;mcc_generated_files/tmr0.c: 76:     timer0ReloadVal= 56;
  2220  0137  3038               	movlw	56
  2221  0138  00F3               	movwf	??_TMR0_Initialize
  2222  0139  0873               	movf	??_TMR0_Initialize,w
  2223  013A  00FB               	movwf	_timer0ReloadVal	;volatile
  2224                           
  2225                           ;mcc_generated_files/tmr0.c: 79:     INTCONbits.TMR0IF = 0;
  2226  013B  110B               	bcf	11,2	;volatile
  2227                           
  2228                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IE = 1;
  2229  013C  168B               	bsf	11,5	;volatile
  2230                           
  2231                           ;mcc_generated_files/tmr0.c: 85:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2232  013D  30AC               	movlw	low _TMR0_DefaultInterruptHandler
  2233  013E  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2234  013F  3001               	movlw	high _TMR0_DefaultInterruptHandler
  2235  0140  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2236  0141  218E               	fcall	_TMR0_SetInterruptHandler
  2237  0142  0008               	return
  2238  0143                     __end_of_TMR0_Initialize:	
  2239                           
  2240                           	psect	text9
  2241  018E                     __ptext9:	
  2242 ;; *************** function _TMR0_SetInterruptHandler *****************
  2243 ;; Defined at:
  2244 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  2247 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1
  2259 ;;      Params:         2       0       0
  2260 ;;      Locals:         0       0       0
  2261 ;;      Temps:          0       0       0
  2262 ;;      Totals:         2       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    5
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_TMR0_Initialize
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _TMR0_SetInterruptHandler
  2275  018E                     _TMR0_SetInterruptHandler:	
  2276                           
  2277                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  2278                           
  2279                           ;incstack = 0
  2280                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2281  018E  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2282  018F  0020               	movlb	0	; select bank0
  2283  0190  00AF               	movwf	_TMR0_InterruptHandler+1
  2284  0191  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2285  0192  00AE               	movwf	_TMR0_InterruptHandler
  2286  0193  0008               	return
  2287  0194                     __end_of_TMR0_SetInterruptHandler:	
  2288                           
  2289                           	psect	text10
  2290  0156                     __ptext10:	
  2291 ;; *************** function _PIN_MANAGER_Initialize *****************
  2292 ;; Defined at:
  2293 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1
  2307 ;;      Params:         0       0       0
  2308 ;;      Locals:         0       0       0
  2309 ;;      Temps:          0       0       0
  2310 ;;      Totals:         0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    5
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_SYSTEM_Initialize
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _PIN_MANAGER_Initialize
  2323  0156                     _PIN_MANAGER_Initialize:	
  2324                           
  2325                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2329  0156  0022               	movlb	2	; select bank2
  2330  0157  018C               	clrf	12	;volatile
  2331                           
  2332                           ;mcc_generated_files/pin_manager.c: 65:     TRISA = 0x1D;
  2333  0158  301D               	movlw	29
  2334  0159  0021               	movlb	1	; select bank1
  2335  015A  008C               	movwf	12	;volatile
  2336                           
  2337                           ;mcc_generated_files/pin_manager.c: 70:     ANSELA = 0x15;
  2338  015B  3015               	movlw	21
  2339  015C  0023               	movlb	3	; select bank3
  2340  015D  008C               	movwf	12	;volatile
  2341                           
  2342                           ;mcc_generated_files/pin_manager.c: 75:     WPUA = 0x00;
  2343  015E  0024               	movlb	4	; select bank4
  2344  015F  018C               	clrf	12	;volatile
  2345                           
  2346                           ;mcc_generated_files/pin_manager.c: 76:     OPTION_REGbits.nWPUEN = 1;
  2347  0160  0021               	movlb	1	; select bank1
  2348  0161  1795               	bsf	21,7	;volatile
  2349                           
  2350                           ;mcc_generated_files/pin_manager.c: 82:     APFCON = 0x00;
  2351  0162  0022               	movlb	2	; select bank2
  2352  0163  019D               	clrf	29	;volatile
  2353  0164  0008               	return
  2354  0165                     __end_of_PIN_MANAGER_Initialize:	
  2355                           
  2356                           	psect	text11
  2357  0170                     __ptext11:	
  2358 ;; *************** function _OSCILLATOR_Initialize *****************
  2359 ;; Defined at:
  2360 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1
  2374 ;;      Params:         0       0       0
  2375 ;;      Locals:         0       0       0
  2376 ;;      Temps:          0       0       0
  2377 ;;      Totals:         0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    5
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_SYSTEM_Initialize
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           
  2389                           ;psect for function _OSCILLATOR_Initialize
  2390  0170                     _OSCILLATOR_Initialize:	
  2391                           
  2392                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  2393                           
  2394                           ;incstack = 0
  2395                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2396  0170  3070               	movlw	112
  2397  0171  0021               	movlb	1	; select bank1
  2398  0172  0099               	movwf	25	;volatile
  2399                           
  2400                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2401  0173  0198               	clrf	24	;volatile
  2402                           
  2403                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
  2404  0174  0022               	movlb	2	; select bank2
  2405  0175  0196               	clrf	22	;volatile
  2406  0176                     l116:	
  2407                           ;mcc_generated_files/mcc.c: 70:     {;mcc_generated_files/mcc.c: 71:     }
  2408                           
  2409                           
  2410                           ;mcc_generated_files/mcc.c: 69:     while(PLLR == 0)
  2411  0176  0021               	movlb	1	; select bank1
  2412  0177  1B1A               	btfsc	26,6	;volatile
  2413  0178  0008               	return
  2414  0179  2976               	goto	l116
  2415  017A                     __end_of_OSCILLATOR_Initialize:	
  2416                           
  2417                           	psect	text12
  2418  017A                     __ptext12:	
  2419 ;; *************** function _ADC_Initialize *****************
  2420 ;; Defined at:
  2421 ;;		line 65 in file "mcc_generated_files/adc.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1
  2435 ;;      Params:         0       0       0
  2436 ;;      Locals:         0       0       0
  2437 ;;      Temps:          0       0       0
  2438 ;;      Totals:         0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    5
  2442 ;; This function calls:
  2443 ;;		Nothing
  2444 ;; This function is called by:
  2445 ;;		_SYSTEM_Initialize
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _ADC_Initialize
  2451  017A                     _ADC_Initialize:	
  2452                           
  2453                           ;mcc_generated_files/adc.c: 70:     ADCON0 = 0x01;
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  2457  017A  3001               	movlw	1
  2458  017B  0021               	movlb	1	; select bank1
  2459  017C  009D               	movwf	29	;volatile
  2460                           
  2461                           ;mcc_generated_files/adc.c: 73:     ADCON1 = 0x20;
  2462  017D  3020               	movlw	32
  2463  017E  009E               	movwf	30	;volatile
  2464                           
  2465                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  2466  017F  019B               	clrf	27	;volatile
  2467                           
  2468                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  2469  0180  019C               	clrf	28	;volatile
  2470  0181  0008               	return
  2471  0182                     __end_of_ADC_Initialize:	
  2472                           
  2473                           	psect	text13
  2474  01A4                     __ptext13:	
  2475 ;; *************** function _ReadAnalog *****************
  2476 ;; Defined at:
  2477 ;;		line 50 in file "sources/analog.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  convertedVal    2    0        unsigned short 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1
  2491 ;;      Params:         0       0       0
  2492 ;;      Locals:         2       0       0
  2493 ;;      Temps:          0       0       0
  2494 ;;      Totals:         2       0       0
  2495 ;;Total ram usage:        2 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; Hardware stack levels required when called:    6
  2498 ;; This function calls:
  2499 ;;		_ADC_GetConversionResult
  2500 ;;		_ADC_StartConversion
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _ReadAnalog
  2508  01A4                     _ReadAnalog:	
  2509                           
  2510                           ;sources/analog.c: 52:     uint16_t convertedValue;;sources/analog.c: 53:     ADC_StartC
      +                          onversion();
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _ReadAnalog: [wreg+status,2+status,0+pclath+cstack]
  2514  01A4  21A7               	fcall	_ADC_StartConversion
  2515  01A5  2194               	fcall	_ADC_GetConversionResult
  2516  01A6  0008               	return
  2517  01A7                     __end_of_ReadAnalog:	
  2518                           
  2519                           	psect	text14
  2520  01A7                     __ptext14:	
  2521 ;; *************** function _ADC_StartConversion *****************
  2522 ;; Defined at:
  2523 ;;		line 91 in file "mcc_generated_files/adc.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		None
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMMON   BANK0   BANK1
  2537 ;;      Params:         0       0       0
  2538 ;;      Locals:         0       0       0
  2539 ;;      Temps:          0       0       0
  2540 ;;      Totals:         0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:    5
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_ReadAnalog
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _ADC_StartConversion
  2553  01A7                     _ADC_StartConversion:	
  2554                           
  2555                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _ADC_StartConversion: []
  2559  01A7  0021               	movlb	1	; select bank1
  2560  01A8  149D               	bsf	29,1	;volatile
  2561  01A9  0008               	return
  2562  01AA                     __end_of_ADC_StartConversion:	
  2563                           
  2564                           	psect	text15
  2565  0194                     __ptext15:	
  2566 ;; *************** function _ADC_GetConversionResult *****************
  2567 ;; Defined at:
  2568 ;;		line 104 in file "mcc_generated_files/adc.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  2    1[COMMON] unsigned short 
  2575 ;; Registers used:
  2576 ;;		wreg
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1
  2582 ;;      Params:         2       0       0
  2583 ;;      Locals:         0       0       0
  2584 ;;      Temps:          0       0       0
  2585 ;;      Totals:         2       0       0
  2586 ;;Total ram usage:        2 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    5
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_ReadAnalog
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _ADC_GetConversionResult
  2598  0194                     _ADC_GetConversionResult:	
  2599                           
  2600                           ;mcc_generated_files/adc.c: 107:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _ADC_GetConversionResult: [wreg]
  2604  0194  0021               	movlb	1	; select bank1
  2605  0195  081C               	movf	28,w	;volatile
  2606  0196  00F2               	movwf	?_ADC_GetConversionResult+1
  2607  0197  081B               	movf	27,w	;volatile
  2608  0198  00F1               	movwf	?_ADC_GetConversionResult
  2609  0199  0008               	return
  2610  019A                     __end_of_ADC_GetConversionResult:	
  2611                           
  2612                           	psect	intentry
  2613  0004                     __pintentry:	
  2614 ;; *************** function _INTERRUPT_InterruptManager *****************
  2615 ;; Defined at:
  2616 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;		None
  2619 ;; Auto vars:     Size  Location     Type
  2620 ;;		None
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, pclath, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1
  2630 ;;      Params:         0       0       0
  2631 ;;      Locals:         0       0       0
  2632 ;;      Temps:          0       0       0
  2633 ;;      Totals:         0       0       0
  2634 ;;Total ram usage:        0 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    4
  2637 ;; This function calls:
  2638 ;;		_TMR0_ISR
  2639 ;; This function is called by:
  2640 ;;		Interrupt level 1
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644  0004                     _INTERRUPT_InterruptManager:	
  2645                           
  2646                           ;incstack = 0
  2647  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2648                           
  2649                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2650  0005  3180               	pagesel	$
  2651                           
  2652                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  2653  0006  1A8B               	btfsc	11,5	;volatile
  2654  0007  1D0B               	btfss	11,2	;volatile
  2655  0008  280A               	goto	i1l90
  2656                           
  2657                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  2658  0009  219A               	fcall	_TMR0_ISR
  2659  000A                     i1l90:	
  2660                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  2661                           
  2662  000A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2663  000B  0009               	retfie
  2664  000C                     __end_of_INTERRUPT_InterruptManager:	
  2665                           
  2666                           	psect	text17
  2667  019A                     __ptext17:	
  2668 ;; *************** function _TMR0_ISR *****************
  2669 ;; Defined at:
  2670 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  1    wreg      void 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1
  2684 ;;      Params:         0       0       0
  2685 ;;      Locals:         0       0       0
  2686 ;;      Temps:          0       0       0
  2687 ;;      Totals:         0       0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    3
  2691 ;; This function calls:
  2692 ;;		_TMR0_CallBack
  2693 ;; This function is called by:
  2694 ;;		_INTERRUPT_InterruptManager
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _TMR0_ISR
  2700  019A                     _TMR0_ISR:	
  2701                           
  2702                           ;mcc_generated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  2706  019A  110B               	bcf	11,2	;volatile
  2707                           
  2708                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  2709  019B  087B               	movf	_timer0ReloadVal,w	;volatile
  2710  019C  0020               	movlb	0	; select bank0
  2711  019D  0095               	movwf	21	;volatile
  2712                           
  2713                           ;mcc_generated_files/tmr0.c: 119:     TMR0_CallBack();
  2714  019E  2165               	fcall	_TMR0_CallBack
  2715  019F  0008               	return
  2716  01A0                     __end_of_TMR0_ISR:	
  2717                           
  2718                           	psect	text18
  2719  0165                     __ptext18:	
  2720 ;; *************** function _TMR0_CallBack *****************
  2721 ;; Defined at:
  2722 ;;		line 124 in file "mcc_generated_files/tmr0.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1
  2736 ;;      Params:         0       0       0
  2737 ;;      Locals:         0       0       0
  2738 ;;      Temps:          0       0       0
  2739 ;;      Totals:         0       0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    2
  2743 ;; This function calls:
  2744 ;;		Absolute function
  2745 ;;		_TMR0_DefaultInterruptHandler
  2746 ;; This function is called by:
  2747 ;;		_TMR0_ISR
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _TMR0_CallBack
  2753  0165                     _TMR0_CallBack:	
  2754                           
  2755                           ;mcc_generated_files/tmr0.c: 128:     if(TMR0_InterruptHandler)
  2756                           
  2757                           ;incstack = 0
  2758                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  2759  0165  0020               	movlb	0	; select bank0
  2760  0166  082E               	movf	_TMR0_InterruptHandler,w
  2761  0167  042F               	iorwf	_TMR0_InterruptHandler+1,w
  2762  0168  1903               	btfsc	3,2
  2763  0169  0008               	return
  2764                           
  2765                           ;mcc_generated_files/tmr0.c: 129:     {;mcc_generated_files/tmr0.c: 130:         TMR0_In
      +                          terruptHandler();
  2766  016A  082F               	movf	_TMR0_InterruptHandler+1,w
  2767  016B  008A               	movwf	10
  2768  016C  082E               	movf	_TMR0_InterruptHandler,w
  2769  016D  000A               	callw
  2770  016E  3181               	pagesel	$
  2771  016F  0008               	return
  2772  0170                     __end_of_TMR0_CallBack:	
  2773                           
  2774                           	psect	text19
  2775  01AC                     __ptext19:	
  2776 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  2777 ;; Defined at:
  2778 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1
  2792 ;;      Params:         0       0       0
  2793 ;;      Locals:         0       0       0
  2794 ;;      Temps:          0       0       0
  2795 ;;      Totals:         0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    1
  2799 ;; This function calls:
  2800 ;;		_TimeBase
  2801 ;; This function is called by:
  2802 ;;		_TMR0_Initialize
  2803 ;;		_TMR0_CallBack
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _TMR0_DefaultInterruptHandler
  2809  01AC                     _TMR0_DefaultInterruptHandler:	
  2810                           
  2811                           ;mcc_generated_files/tmr0.c: 142:     TimeBase();
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
  2815  01AC  2019               	fcall	_TimeBase
  2816  01AD  0008               	return
  2817  01AE                     __end_of_TMR0_DefaultInterruptHandler:	
  2818                           
  2819                           	psect	text20
  2820  0019                     __ptext20:	
  2821 ;; *************** function _TimeBase *****************
  2822 ;; Defined at:
  2823 ;;		line 99 in file "sources/MCCinterface.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1
  2837 ;;      Params:         0       0       0
  2838 ;;      Locals:         0       0       0
  2839 ;;      Temps:          1       0       0
  2840 ;;      Totals:         1       0       0
  2841 ;;Total ram usage:        1 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_TMR0_DefaultInterruptHandler
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           
  2851                           ;psect for function _TimeBase
  2852  0019                     _TimeBase:	
  2853                           
  2854                           ;sources/MCCinterface.c: 101:     timebase_flags.time_100us = 1;
  2855                           
  2856                           ;incstack = 0
  2857                           ; Regs used in _TimeBase: [wreg+status,2+status,0]
  2858  0019  1479               	bsf	_timebase_flags,0	;volatile
  2859                           
  2860                           ;sources/MCCinterface.c: 103:     if (++timebase_timers.timer_1ms == 10)
  2861  001A  3001               	movlw	1
  2862  001B  00F0               	movwf	??_TimeBase
  2863  001C  0870               	movf	??_TimeBase,w
  2864  001D  0020               	movlb	0	; select bank0
  2865  001E  07A0               	addwf	_timebase_timers,f	;volatile
  2866  001F  300A               	movlw	10
  2867  0020  0620               	xorwf	_timebase_timers,w	;volatile
  2868  0021  1D03               	btfss	3,2
  2869  0022  0008               	return
  2870                           
  2871                           ;sources/MCCinterface.c: 104:     {;sources/MCCinterface.c: 105:         timebase_timers
      +                          .timer_1ms = 0;
  2872  0023  01A0               	clrf	_timebase_timers	;volatile
  2873                           
  2874                           ;sources/MCCinterface.c: 107:         if (++timebase_timers.timer_10ms == 10)
  2875  0024  3001               	movlw	1
  2876  0025  00F0               	movwf	??_TimeBase
  2877  0026  0870               	movf	??_TimeBase,w
  2878  0027  07A1               	addwf	_timebase_timers+1,f	;volatile
  2879  0028  300A               	movlw	10
  2880  0029  0621               	xorwf	_timebase_timers+1,w	;volatile
  2881  002A  1D03               	btfss	3,2
  2882  002B  0008               	return
  2883                           
  2884                           ;sources/MCCinterface.c: 108:         {;sources/MCCinterface.c: 109:             timebas
      +                          e_timers.timer_10ms = 0;
  2885  002C  01A1               	clrf	_timebase_timers+1	;volatile
  2886                           
  2887                           ;sources/MCCinterface.c: 110:             timebase_flags.time_10ms = 1;
  2888  002D  1579               	bsf	_timebase_flags,2	;volatile
  2889                           
  2890                           ;sources/MCCinterface.c: 112:             if (++timebase_timers.timer_100ms == 10)
  2891  002E  3001               	movlw	1
  2892  002F  00F0               	movwf	??_TimeBase
  2893  0030  0870               	movf	??_TimeBase,w
  2894  0031  07A2               	addwf	_timebase_timers+2,f	;volatile
  2895  0032  300A               	movlw	10
  2896  0033  0622               	xorwf	_timebase_timers+2,w	;volatile
  2897  0034  1D03               	btfss	3,2
  2898  0035  0008               	return
  2899                           
  2900                           ;sources/MCCinterface.c: 113:             {;sources/MCCinterface.c: 114:                
      +                           timebase_timers.timer_100ms = 0;
  2901  0036  01A2               	clrf	_timebase_timers+2	;volatile
  2902                           
  2903                           ;sources/MCCinterface.c: 115:                 timebase_flags.time_100ms = 1;
  2904  0037  15F9               	bsf	_timebase_flags,3	;volatile
  2905                           
  2906                           ;sources/MCCinterface.c: 117:                 if (++timebase_timers.timer_500ms == 5)
  2907  0038  3001               	movlw	1
  2908  0039  00F0               	movwf	??_TimeBase
  2909  003A  0870               	movf	??_TimeBase,w
  2910  003B  07A3               	addwf	_timebase_timers+3,f	;volatile
  2911  003C  3005               	movlw	5
  2912  003D  0623               	xorwf	_timebase_timers+3,w	;volatile
  2913  003E  1D03               	btfss	3,2
  2914  003F  0008               	return
  2915                           
  2916                           ;sources/MCCinterface.c: 118:                 {;sources/MCCinterface.c: 119:            
      +                                   timebase_timers.timer_500ms = 0;
  2917  0040  01A3               	clrf	_timebase_timers+3	;volatile
  2918                           
  2919                           ;sources/MCCinterface.c: 120:                     timebase_flags.time_500ms = 1;
  2920  0041  1679               	bsf	_timebase_flags,4	;volatile
  2921                           
  2922                           ;sources/MCCinterface.c: 122:                     if (++timebase_timers.timer_1s == 10)
  2923  0042  3001               	movlw	1
  2924  0043  00F0               	movwf	??_TimeBase
  2925  0044  0870               	movf	??_TimeBase,w
  2926  0045  07A4               	addwf	_timebase_timers+4,f	;volatile
  2927  0046  300A               	movlw	10
  2928  0047  0624               	xorwf	_timebase_timers+4,w	;volatile
  2929  0048  1D03               	btfss	3,2
  2930  0049  0008               	return
  2931                           
  2932                           ;sources/MCCinterface.c: 123:                     {;sources/MCCinterface.c: 124:        
      +                                           timebase_timers.timer_1s = 0;
  2933  004A  01A4               	clrf	_timebase_timers+4	;volatile
  2934                           
  2935                           ;sources/MCCinterface.c: 125:                         timebase_flags.time_1s = 1;
  2936  004B  16F9               	bsf	_timebase_flags,5	;volatile
  2937                           
  2938                           ;sources/MCCinterface.c: 127:                         if (++timebase_timers.timer_1minut
      +                          e == 60)
  2939  004C  3001               	movlw	1
  2940  004D  00F0               	movwf	??_TimeBase
  2941  004E  0870               	movf	??_TimeBase,w
  2942  004F  07A5               	addwf	_timebase_timers+5,f	;volatile
  2943  0050  303C               	movlw	60
  2944  0051  0625               	xorwf	_timebase_timers+5,w	;volatile
  2945  0052  1D03               	btfss	3,2
  2946  0053  0008               	return
  2947                           
  2948                           ;sources/MCCinterface.c: 128:                         {;sources/MCCinterface.c: 129:    
      +                                                   timebase_timers.timer_1minute = 0;
  2949  0054  01A5               	clrf	_timebase_timers+5	;volatile
  2950                           
  2951                           ;sources/MCCinterface.c: 130:                             timebase_flags.time_1minute = 
      +                          1;
  2952  0055  1779               	bsf	_timebase_flags,6	;volatile
  2953                           
  2954                           ;sources/MCCinterface.c: 132:                             if (++timebase_timers.timer_1h
      +                          our == 60)
  2955  0056  3001               	movlw	1
  2956  0057  00F0               	movwf	??_TimeBase
  2957  0058  0870               	movf	??_TimeBase,w
  2958  0059  07A6               	addwf	_timebase_timers+6,f	;volatile
  2959  005A  303C               	movlw	60
  2960  005B  0626               	xorwf	_timebase_timers+6,w	;volatile
  2961  005C  1D03               	btfss	3,2
  2962  005D  0008               	return
  2963                           
  2964                           ;sources/MCCinterface.c: 133:                             {;sources/MCCinterface.c: 134:
      +                                                           timebase_timers.timer_1hour = 0;
  2965  005E  01A6               	clrf	_timebase_timers+6	;volatile
  2966                           
  2967                           ;sources/MCCinterface.c: 135:                                 timebase_flags.time_1hour 
      +                          = 1;
  2968  005F  17F9               	bsf	_timebase_flags,7	;volatile
  2969                           
  2970                           ;sources/MCCinterface.c: 137:                                 if (++timebase_timers.time
      +                          r_1day == 24)
  2971  0060  3001               	movlw	1
  2972  0061  00F0               	movwf	??_TimeBase
  2973  0062  0870               	movf	??_TimeBase,w
  2974  0063  07A7               	addwf	_timebase_timers+7,f	;volatile
  2975  0064  3018               	movlw	24
  2976  0065  0627               	xorwf	_timebase_timers+7,w	;volatile
  2977  0066  1D03               	btfss	3,2
  2978  0067  0008               	return
  2979                           
  2980                           ;sources/MCCinterface.c: 138:                                 {;sources/MCCinterface.c: 
      +                          139:                                     timebase_timers.timer_1day = 0;
  2981  0068  01A7               	clrf	_timebase_timers+7	;volatile
  2982                           
  2983                           ;sources/MCCinterface.c: 140:                                     timebase_flags.time_1d
      +                          ay = 1;
  2984  0069  147A               	bsf	_timebase_flags+1,0	;volatile
  2985  006A  0008               	return
  2986  006B                     __end_of_TimeBase:	
  2987                           ;sources/MCCinterface.c: 145:                     }
  2988                           
  2989  007E                     btemp	set	126	;btemp
  2990  007E                     int$flags	set	126
  2991  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      2      18
    BANK1            32      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _gen_pulse->___lwdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _ReadAnalog->_ADC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_DefaultInterruptHandler->_TimeBase

Critical Paths under _main in BANK0

    _main->_gen_pulse

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     975
                         _ReadAnalog
                  _SYSTEM_Initialize
                         _SystemInit
                          _gen_pulse
 ---------------------------------------------------------------------------------
 (1) _gen_pulse                                            2     2      0     876
                                              0 BANK0      2     2      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0       0
                    _TimeBaseVarInit
 ---------------------------------------------------------------------------------
 (2) _TimeBaseVarInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      98
                                              3 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadAnalog                                           2     2      0       1
                                              3 COMMON     2     2      0
            _ADC_GetConversionResult
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
                           _TimeBase
 ---------------------------------------------------------------------------------
 (8) _TimeBase                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadAnalog
     _ADC_GetConversionResult
     _ADC_StartConversion
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _SystemInit
     _TimeBaseVarInit
   _gen_pulse
     ___lwdiv
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
         _TimeBase

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      12       6       22.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      1E       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 26 22:42:52 2024

                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 0073  
                         _timer0ReloadVal 007B                               __CFG_LVP$ON 0000  
                                     l116 0176                                       l212 0078  
                                     l369 011C                              __CFG_CPD$OFF 0000  
                                     u805 00D1                                       u815 00DB  
                                     u825 00E3                                       u745 011D  
                                     u755 0122                                       u940 010D  
                                     u870 00B9                                       u785 00C7  
                                     u865 00AC                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                                    l1301 00EB                                      l1321 00A6  
                                    l1319 00A4                                      l1343 00FB  
                                    l1335 00F5                                      l1291 00D0  
                                    l1267 0116                                      l1357 010F  
                                    l1349 00FF                                      l1297 00E2  
                                    l1289 00C4                              __CFG_WDTE$ON 0000  
                                    _LATA 010C                                      i1l90 000A  
                                    _PLLR 04D6                                      _TMR0 0015  
                                    _WPUA 020C                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _main 00F0  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      start 000C  
                         _TimeBaseVarInit 0143                             __CFG_MCLRE$ON 0000  
                 __end_of_TMR0_Initialize 0143                             __CFG_PLLEN$ON 0000  
          ??_TMR0_DefaultInterruptHandler 0071            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 017A                                     ?_main 0070  
                         __end_of___lwdiv 00F0                                     _TRISA 008C  
        __size_of_ADC_GetConversionResult 0006         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0071                          __end_of_TMR0_ISR 01A0  
                          _WDT_Initialize 01A0                    gen_pulse@tempThreshold 0030  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                                _ReadAnalog 01A4  
                         __initialization 000D                              __end_of_main 0114  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 0079  
                        __end_of_TimeBase 006B                    __end_of_WDT_Initialize 01A4  
                          _convertedValue 002C                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _ADRESH 009C  
                                  _ADRESL 009B                                    _APFCON 011D  
                                  _ANSELA 018C                                    _BORCON 0116  
                 __end_of_TimeBaseVarInit 0156                                    _OSCCON 0099  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
                                  ___wmul 0114                            __CFG_STVREN$ON 0000  
                               ??___lwdiv 0075                          ?_TMR0_Initialize 0070  
                         ?_WDT_Initialize 0070                     __end_of_TMR0_CallBack 0170  
TMR0_SetInterruptHandler@InterruptHandler 0071                         _SYSTEM_Initialize 0188  
                 __end_of__initialization 0016                        ?_SYSTEM_Initialize 0070  
                             ?_ReadAnalog 0070              __size_of_ADC_StartConversion 0003  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0074  
                               ?_TMR0_ISR 0070                   _ADC_GetConversionResult 0194  
                          _OPTION_REGbits 0095                           _timebase_timers 0020  
                              _SystemInit 01AA                        __size_of_gen_pulse 0051  
               __end_of_SYSTEM_Initialize 018E                                __pbssBANK0 0020  
                        ?_TimeBaseVarInit 0070                                 ?_TimeBase 0070  
                              __pmaintext 00F0          __end_of_TMR0_SetInterruptHandler 0194  
                                 ?___wmul 0071                                ??_TMR0_ISR 0071  
                              __pintentry 0004                   __size_of_ADC_Initialize 0008  
                                 _OSCTUNE 0098                       __size_of_ReadAnalog 0003  
                  gen_pulse@filterTrimmer 0028                      gen_pulse@count_pulse 002A  
                              ??_TimeBase 0070                         __end_of_gen_pulse 00BC  
                         __size_of___wmul 001B                                   ___lwdiv 00BC  
               ??_ADC_GetConversionResult 0073                                   __ptext1 006B  
                                 __ptext2 0114                                   __ptext3 00BC  
                                 __ptext4 01AA                                   __ptext5 0143  
                                 __ptext6 0188                                   __ptext7 01A0  
                                 __ptext8 012F                                   __ptext9 018E  
                   _OSCILLATOR_Initialize 0170                               ?_SystemInit 0070  
                ??_PIN_MANAGER_Initialize 0071                __size_of_SYSTEM_Initialize 0006  
                                 clrloop0 0183                      end_of_initialization 0016  
                        ??_WDT_Initialize 0071                  _TMR0_SetInterruptHandler 018E  
                        __CFG_FOSC$INTOSC 0000                       _ADC_StartConversion 01A7  
                            ??_ReadAnalog 0073                       __size_of_SystemInit 0002  
                    ?_ADC_StartConversion 0070                            __end_of___wmul 012F  
                       __size_of_TMR0_ISR 0006                            _ADC_Initialize 017A  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 000D  
                __size_of_TMR0_Initialize 0014           __size_of_PIN_MANAGER_Initialize 000F  
                      __end_of_ReadAnalog 01A7                     ??_ADC_StartConversion 0071  
                                ??___wmul 0075                         __size_of_TimeBase 0052  
                  __size_of_TMR0_CallBack 000B                    __end_of_ADC_Initialize 0182  
                             __pbssCOMMON 0079                                 ___latbits 0000  
                           __pcstackBANK0 0030                            _timebase_flags 0079  
                   _TMR0_InterruptHandler 002E                          ___lwdiv@dividend 0073  
                  _PIN_MANAGER_Initialize 0156                  __size_of_TimeBaseVarInit 0013  
                                ?___lwdiv 0071                           ?_ADC_Initialize 0070  
                               _gen_pulse 006B              ??_INTERRUPT_InterruptManager 0071  
                            ??_SystemInit 0071                          ___lwdiv@quotient 0077  
                           _TMR0_CallBack 0165                         ??_TMR0_Initialize 0073  
                          ___wmul@product 0075                                  _LATAbits 010C  
                               clear_ram0 0182       __size_of_INTERRUPT_InterruptManager 0008  
              ??_TMR0_SetInterruptHandler 0073                        __end_of_SystemInit 01AC  
                                _TMR0_ISR 019A                                ?_gen_pulse 0070  
                              _ADCON0bits 009D                         ___wmul@multiplier 0071  
                          ?_TMR0_CallBack 0070                                  _TimeBase 0019  
                ?_ADC_GetConversionResult 0071                   ??_OSCILLATOR_Initialize 0071  
                        __size_of___lwdiv 0034                         ??_TimeBaseVarInit 0071  
                         ___lwdiv@divisor 0071                           ___lwdiv@counter 0076  
                                __ptext10 0156                                  __ptext11 0170  
                                __ptext20 0019                                  __ptext12 017A  
                                __ptext13 01A4                                  __ptext14 01A7  
                                __ptext15 0194                                  __ptext17 019A  
                                __ptext18 0165                                  __ptext19 01AC  
                           __size_of_main 0024      __end_of_TMR0_DefaultInterruptHandler 01AE  
   __size_of_TMR0_DefaultInterruptHandler 0002              _TMR0_DefaultInterruptHandler 01AC  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 000C  
              _INTERRUPT_InterruptManager 0004                               ??_gen_pulse 0079  
                              _INTCONbits 000B                           ??_TMR0_CallBack 0071  
                 __size_of_WDT_Initialize 0004                                  intlevel1 0000  
             __end_of_ADC_StartConversion 01AA                   ?_PIN_MANAGER_Initialize 0070  
         __end_of_ADC_GetConversionResult 019A                         __CFG_CLKOUTEN$OFF 0000  
                        ??_ADC_Initialize 0071             ?_TMR0_DefaultInterruptHandler 0070  
                              _OPTION_REG 0095                           _TMR0_Initialize 012F  
          __end_of_PIN_MANAGER_Initialize 0165  
